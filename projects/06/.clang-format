---
#Language: Cpp
# AccessModifierOffset: -2
AccessModifierOffset: -4
# AlignAfterOpenBracket: Align
AlignAfterOpenBracket: DontAlign
# AlignArrayOfStructures: None
# TRANSITION, LLVM-51935 (try using AlignArrayOfStructures after this crash is fixed)
# AlignConsecutiveAssignments:
#   Enabled:         false
#   AcrossEmptyLines: false
#   AcrossComments:  false
#   AlignCompound:   false
#   PadOperators:    true
AlignConsecutiveAssignments: Consecutive
# AlignConsecutiveBitFields:
#   Enabled:         false
#   AcrossEmptyLines: false
#   AcrossComments:  false
#   AlignCompound:   false
#   PadOperators:    false
# AlignConsecutiveDeclarations:
#   Enabled:         false
#   AcrossEmptyLines: false
#   AcrossComments:  false
#   AlignCompound:   false
#   PadOperators:    false
# AlignConsecutiveMacros:
#   Enabled:         false
#   AcrossEmptyLines: false
#   AcrossComments:  false
#   AlignCompound:   false
#   PadOperators:    false
AlignConsecutiveMacros: Consecutive
# AlignEscapedNewlines: Right
AlignEscapedNewlines: Left
# AlignOperands:   Align
AlignOperands: AlignAfterOperator
# AlignTrailingComments: true
AlignTrailingComments: false
# AllowAllArgumentsOnNextLine: true
# AllowAllParametersOfDeclarationOnNextLine: true
# AllowShortEnumsOnASingleLine: true
# AllowShortBlocksOnASingleLine: Never
# AllowShortCaseLabelsOnASingleLine: false
# AllowShortFunctionsOnASingleLine: All
AllowShortFunctionsOnASingleLine: Empty
# AllowShortLambdasOnASingleLine: All
# AllowShortIfStatementsOnASingleLine: Never
# AllowShortLoopsOnASingleLine: false
# AlwaysBreakAfterDefinitionReturnType: None
# AlwaysBreakAfterReturnType: None
# AlwaysBreakBeforeMultilineStrings: false
# AlwaysBreakTemplateDeclarations: MultiLine
AlwaysBreakTemplateDeclarations: Yes
# AttributeMacros:
#   - __capability
# BinPackArguments: true
# BinPackParameters: true
# BraceWrapping:
#   AfterCaseLabel:  false
#   AfterClass:      false
#   AfterControlStatement: Never
#   AfterEnum:       false
#   AfterFunction:   false
#   AfterNamespace:  false
#   AfterObjCDeclaration: false
#   AfterStruct:     false
#   AfterUnion:      false
#   AfterExternBlock: false
#   BeforeCatch:     false
#   BeforeElse:      false
#   BeforeLambdaBody: false
#   BeforeWhile:     false
#   IndentBraces:    false
#   SplitEmptyFunction: true
#   SplitEmptyRecord: true
#   SplitEmptyNamespace: true
# BreakBeforeBinaryOperators: None
BreakBeforeBinaryOperators: NonAssignment
# BreakBeforeConceptDeclarations: Always
# BreakBeforeBraces: Attach
# BreakBeforeInheritanceComma: false
# BreakInheritanceList: BeforeColon
# BreakBeforeTernaryOperators: true
# BreakConstructorInitializersBeforeComma: false
# BreakConstructorInitializers: BeforeColon
# BreakAfterJavaFieldAnnotations: false
# BreakStringLiterals: true
ColumnLimit: 120
# CommentPragmas:  '^ IWYU pragma:'
# QualifierAlignment: Leave
# CompactNamespaces: false
# ConstructorInitializerIndentWidth: 4
# ContinuationIndentWidth: 4
# Cpp11BracedListStyle: true
# DeriveLineEnding: true
DeriveLineEnding: false
# DerivePointerAlignment: false
# DisableFormat:   false
# EmptyLineAfterAccessModifier: Never
# EmptyLineBeforeAccessModifier: LogicalBlock
# ExperimentalAutoDetectBinPacking: false
# PackConstructorInitializers: BinPack
# BasedOnStyle:    ''
# ConstructorInitializerAllOnOneLineOrOnePerLine: false
# AllowAllConstructorInitializersOnNextLine: true
# FixNamespaceComments: true
# ForEachMacros:
#   - foreach
#   - Q_FOREACH
#   - BOOST_FOREACH
# IfMacros:
#   - KJ_IF_MAYBE
# IncludeBlocks:   Preserve
IncludeBlocks: Regroup
# IncludeCategories:
#   - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
#     Priority:        2
#     SortPriority:    0
#     CaseSensitive:   false
#   - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
#     Priority:        3
#     SortPriority:    0
#     CaseSensitive:   false
#   - Regex:           '.*'
#     Priority:        1
#     SortPriority:    0
#     CaseSensitive:   false
IncludeCategories:
  - Regex: '^<yvals(_core)?\.h>$'
    Priority: 1
  - Regex: '^<(Windows|userenv)\.h>$'
    Priority: 3
    SortPriority: 3
  - Regex: '^<WinIoCtl\.h>$'
    Priority: 3
    SortPriority: 4
  - Regex: '^<__.*\.hpp>$'
    Priority: 2
  - Regex: '\.hpp[>"]$'
    Priority: 5
  - Regex: '.*'
    Priority: 2
# IncludeIsMainRegex: '(Test)?$'
# IncludeIsMainSourceRegex: ''
# IndentAccessModifiers: false
# IndentCaseLabels: false
# IndentCaseBlocks: false
IndentCaseBlocks: true
# IndentGotoLabels: true
# IndentPPDirectives: None
# IndentExternBlock: AfterExternBlock
# IndentRequiresClause: true
# IndentWidth:     2
IndentWidth: 4
# IndentWrappedFunctionNames: false
IndentWrappedFunctionNames: true
# InsertBraces:    false
InsertBraces: true
# InsertTrailingCommas: None
# JavaScriptQuotes: Leave
# JavaScriptWrapImports: true
# KeepEmptyLinesAtTheStartOfBlocks: true
# LambdaBodyIndentation: Signature
# NOTE: MacroBlockBegin/MacroBlockEnd don't work with _CATCH_ALL.
# MacroBlockBegin: ''
# MacroBlockEnd:   ''
# MaxEmptyLinesToKeep: 1
MaxEmptyLinesToKeep: 2
# NamespaceIndentation: None
NamespaceIndentation: All
# ObjCBinPackProtocolList: Auto
# ObjCBlockIndentWidth: 2
# ObjCBreakBeforeNestedBlockParam: true
# ObjCSpaceAfterProperty: false
# ObjCSpaceBeforeProtocolList: true
# PenaltyBreakAssignment: 2
# PenaltyBreakBeforeFirstCallParameter: 19
# PenaltyBreakComment: 300
# PenaltyBreakFirstLessLess: 120
# PenaltyBreakOpenParenthesis: 0
# PenaltyBreakString: 1000
# PenaltyBreakTemplateDeclaration: 10
# PenaltyExcessCharacter: 1000000
# PenaltyReturnTypeOnItsOwnLine: 60
# PenaltyIndentedWhitespace: 0
# PointerAlignment: Right
PointerAlignment: Left
# PPIndentWidth:   -1
# ReferenceAlignment: Pointer
# ReflowComments:  true
# RemoveBracesLLVM: false
# RequiresClausePosition: OwnLine
# SeparateDefinitionBlocks: Leave
# ShortNamespaceLines: 1
# SortIncludes:    CaseSensitive
# SortJavaStaticImport: Before
# SortUsingDeclarations: true
# SpaceAfterCStyleCast: false
SpaceAfterCStyleCast: true
# SpaceAfterLogicalNot: false
# SpaceAfterTemplateKeyword: true
# SpaceBeforeAssignmentOperators: true
# SpaceBeforeCaseColon: false
# SpaceBeforeCpp11BracedList: false
# SpaceBeforeCtorInitializerColon: true
# SpaceBeforeInheritanceColon: true
# SpaceBeforeParens: ControlStatements
# SpaceBeforeParensOptions:
#   AfterControlStatements: true
#   AfterForeachMacros: true
#   AfterFunctionDefinitionName: false
#   AfterFunctionDeclarationName: false
#   AfterIfMacros:   true
#   AfterOverloadedOperator: false
#   AfterRequiresInClause: false
#   AfterRequiresInExpression: false
#   BeforeNonEmptyParentheses: false
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterRequiresInClause: true
# SpaceAroundPointerQualifiers: Default
# SpaceBeforeRangeBasedForLoopColon: true
# SpaceInEmptyBlock: false
# SpaceInEmptyParentheses: false
# SpacesBeforeTrailingComments: 1
# SpacesInAngles:  Never
# SpacesInConditionalStatement: false
# SpacesInContainerLiterals: true
# SpacesInCStyleCastParentheses: false
# SpacesInLineCommentPrefix:
#   Minimum:         1
#   Maximum:         -1
# SpacesInParentheses: false
# SpacesInSquareBrackets: false
# SpaceBeforeSquareBrackets: false
# BitFieldColonSpacing: Both
# Standard:        Latest
# StatementAttributeLikeMacros:
#   - Q_EMIT
# StatementMacros:
#   - Q_UNUSED
#   - QT_REQUIRE_VERSION
# NOTE: _STD_BEGIN, _STD_END, etc. aren't macros for complete statements, but telling
# clang-format that they are produces the behavior that we want (with no block indentation).
StatementMacros:
  - _STD_BEGIN
  - _STD_END
  - _STDEXT_BEGIN
  - _STDEXT_END
  - _EXTERN_C
  - _END_EXTERN_C
  - _EXTERN_C_UNLESS_PURE
  - _END_EXTERN_C_UNLESS_PURE
# TabWidth:        8
# UseCRLF:         false
UseCRLF: true
AlignConsecutiveTableGenDefinitionColons:
SpaceBeforeCaseColon: false
BreakConstructorInitializersBeforeComma: false
PenaltyBreakString: 0
AlignConsecutiveBitFields:
JavaImportGroups:
  -

TabWidth: 0
AllowAllArgumentsOnNextLine: false
RequiresExpressionIndentation: OuterScope
SpacesBeforeTrailingComments: 0
SpaceBeforeInheritanceColon: false
BraceWrapping:
IndentPPDirectives: None
PackConstructorInitializers: Never
QualifierAlignment: Leave
SpaceBeforeSquareBrackets: false
IfMacros:
  -

TableGenBreakInsideDAGArg: DontBreak
AllowShortCaseExpressionOnASingleLine: false
BreakBinaryOperations: Never
MacroBlockEnd:
SortIncludes: Never
BreakBeforeConceptDeclarations: Never
PenaltyBreakAssignment: 0
UseTab: Never
TemplateNames:
  -

NamespaceMacros:
  -

BreakConstructorInitializers: BeforeColon
RemoveEmptyLinesInUnwrappedLines: false
InsertTrailingCommas: None
LineEnding: LF
AlignConsecutiveTableGenBreakingDAGArgColons:
Cpp11BracedListStyle: false
BreakInheritanceList: BeforeColon
MacroBlockBegin:
SpacesInLineCommentPrefix:
BreakBeforeTernaryOperators: false
CommentPragmas:
SpaceInEmptyBlock: false
JavaScriptQuotes: Leave
BitFieldColonSpacing: Both
AlwaysBreakAfterReturnType:
SpacesInParentheses: false
BreakBeforeBraces: Attach
BreakFunctionDefinitionParameters: false
AllowShortEnumsOnASingleLine: false
AllowShortCompoundRequirementOnASingleLine: false
ShortNamespaceLines: 0
PenaltyBreakTemplateDeclaration: 0
KeepEmptyLines:
SpaceAroundPointerQualifiers: Default
IntegerLiteralSeparator:
BreakAdjacentStringLiterals: false
AllowAllParametersOfDeclarationOnNextLine: false
PenaltyBreakOpenParenthesis: 0
TableGenBreakingDAGArgOperators:
  -

StatementAttributeLikeMacros:
  -

AllowAllConstructorInitializersOnNextLine: false
RawStringFormats:
  -

CompactNamespaces: false
TypeNames:
  -

QualifierOrder:
  -

ObjCBlockIndentWidth: 0
SortJavaStaticImport: Before
SpaceBeforeCpp11BracedList: false
BreakArrays: false
AlwaysBreakBeforeMultilineStrings: false
MainIncludeChar: Quote
IndentGotoLabels: false
SpaceInEmptyParentheses: false
AttributeMacros:
  -

ConstructorInitializerIndentWidth: 0
SpaceBeforeCtorInitializerColon: false
AlignConsecutiveShortCaseStatements:
SpacesInCStyleCastParentheses: false
IncludeIsMainRegex:
IndentExternBlock: AfterExternBlock
KeepFormFeed: false
SpaceBeforeRangeBasedForLoopColon: false
AlwaysBreakAfterDefinitionReturnType: None
PenaltyExcessCharacter: 0
SpacesInParens: Never
ConstructorInitializerAllOnOneLineOrOnePerLine: false
IndentAccessModifiers: false
BreakBeforeInheritanceComma: false
RequiresClausePosition: OwnLine
SpaceAfterTemplateKeyword: false
IncludeIsMainSourceRegex:
LambdaBodyIndentation: Signature
BreakAfterJavaFieldAnnotations: false
WhitespaceSensitiveMacros:
  -

AllowShortIfStatementsOnASingleLine: Never
SpacesInConditionalStatement: false
PenaltyBreakFirstLessLess: 0
AlignArrayOfStructures: Left
AlignConsecutiveDeclarations:
ReflowComments: Never
ReferenceAlignment: Pointer
InsertNewlineAtEOF: false
BracedInitializerIndentWidth: 0
SeparateDefinitionBlocks: Leave
ContinuationIndentWidth: 0
KeepEmptyLinesAtEOF: false
KeepEmptyLinesAtTheStartOfBlocks: false
ObjCSpaceBeforeProtocolList: false
RemoveBracesLLVM: false
SpaceAfterLogicalNot: false
AllowShortLambdasOnASingleLine: None
ObjCSpaceAfterProperty: false
BreakAfterAttributes: Always
TypenameMacros:
  -

SpacesInParensOptions:
Macros:
  -

AllowShortCaseLabelsOnASingleLine: false
RemoveSemicolon: false
BreakBeforeInlineASMColon: Never
IndentCaseLabels: false
SpacesInSquareBrackets: false
AlignConsecutiveTableGenCondOperatorColons:
BreakStringLiterals: false
BreakTemplateDeclarations: Leave
SpaceBeforeAssignmentOperators: false
PenaltyReturnTypeOnItsOwnLine: 0
ExperimentalAutoDetectBinPacking: false
BreakAfterReturnType: None
Standard: c++03
SpacesInContainerLiterals: false
VerilogBreakBetweenInstancePorts: false
SpaceBeforeJsonColon: false
PenaltyIndentedWhitespace: 0
SkipMacroDefinitionBody: false
Language: None
DisableFormat: false
ObjCBinPackProtocolList: Auto
IndentRequiresClause: false
DerivePointerAlignment: false
JavaScriptWrapImports: false
AllowBreakBeforeNoexceptSpecifier: Never
EmptyLineBeforeAccessModifier: Never
ForEachMacros:
  -

BinPackParameters: BinPack
AllowShortLoopsOnASingleLine: false
ObjCBreakBeforeNestedBlockParam: false
AllowShortBlocksOnASingleLine: Never
SortUsingDeclarations: Never
PPIndentWidth: 0
SpacesInAngles: Never
PenaltyBreakBeforeFirstCallParameter: 0
EmptyLineAfterAccessModifier: Never
FixNamespaceComments: false
ObjCPropertyAttributeOrder:
  -

RemoveParentheses: Leave
BinPackArguments: false
PenaltyBreakComment: 0
PenaltyBreakScopeResolution: 0
# UseTab:          Never
# WhitespaceSensitiveMacros:
#   - STRINGIZE
#   - PP_STRINGIZE
#   - BOOST_PP_STRINGIZE
#   - NS_SWIFT_NAME
#   - CF_SWIFT_NAME
...
